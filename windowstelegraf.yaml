heat_template_version: 2016-10-14

description: >
  Create a simple VM using Heat


parameters:
  sg_type:
    type: string
    default: default

  key:
    type: string
    description: >
      Name of a KeyPair to enable SSH access to the instance.
    default: monasca

  flavor:
    type: string
    description: Instance type for the docker server.
    default: m1.large

  public_net:
    type: string
    description: name of public network for which floating IP addresses will be allocated.
    default: ext-net

  availabilityZone:
    type: string
    default: nova

  vmAvailabilityZone:
    type: string
    default: nova

  internalNet:
    type: string
    description: internal network name
    default: default
  internalSubnet:
    type: string
    description: internal subnet name
    default: default-subnet
  securityGroup:
    type: string
    description: security group name
    default: default123
  volumeName:
    type: string
    description: name of the bootable volume
    default: mohan
  serverName:
    type: string
    description: name of the instance
    default: mohan-telegraf
  volumeSize:
    type: number
    default: 40

  bootImage:
    type: string
    default: Windows-server-heat

  proxy_ip:
    type: string
    default: http://10.157.240.254:8678

  istelegrafon:
    type: string
    default: restart

  isprodvm:
    type: string
    default: non-prod

  commandLog:
    type: boolean
    default: false

  telegraf_agent_max_timeout:
    type: number
    default: 3600
    description: >
      The maximum allowed time for the telegraf Agent instalation to finish.


conditions:
  custom: {equals: [{get_param: sg_type}, "custom"]}
  default: {equals: [{get_param: sg_type}, "default"]}


resources:
  security_group:
    type: OS::Neutron::SecurityGroup
    properties:
      name: { get_param: securityGroup }
      description: Default security group created by JAWS console
      rules: [
             {"direction": ingress,
              "remote_ip_prefix": 0.0.0.0/0,
              "port_range_min": 22,
              "port_range_max": 22,
              "ethertype": IPv4,
              "protocol": tcp},
              {"direction": ingress,
              "remote_ip_prefix": 0.0.0.0/0,
              "port_range_min": 80,
              "port_range_max": 80,
              "ethertype": IPv4,
              "protocol": tcp},
              {"direction": ingress,
               "remote_ip_prefix": 0.0.0.0/0,
               "port_range_min": 3389,
               "port_range_max": 3389,
               "ethertype": IPv4,
               "protocol": tcp},
              {"direction": ingress,
              "remote_ip_prefix": 0.0.0.0/0,
              "port_range_min": 443,
              "port_range_max": 443,
              "ethertype": IPv4,
              "protocol": tcp}

            ]
    condition: default

  server_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_param: internalNet }
      fixed_ips:
        - subnet_id: { get_param: internalSubnet  }
      security_groups:
        - { if: ["custom", { get_param: securityGroup }, { get_resource: security_group } ] }

  server_floating_ip:
    type: OS::Nova::FloatingIP
    properties:
      pool: { get_param: public_net}

  associate_floating_ip:
    type: OS::Nova::FloatingIPAssociation
    properties:
      floating_ip: { get_resource: server_floating_ip}
      server_id: { get_resource: server}

  utils_module:
    type: OS::Heat::SoftwareConfig
    properties:
      group: ungrouped
      config: { get_file: heat-powershell-utils.psm1 }

  telegraf_agent_module:
    type: OS::Heat::SoftwareConfig
    properties:
      group: ungrouped
      config: { get_file: telegrafagent.psm1 }

  telegraf_agent_main:
    type: OS::Heat::SoftwareConfig
    properties:
      group: ungrouped
      config:
        str_replace:
          template: { get_file: telegrafagent.ps1 }
          params:
            proxy_ip:
              { get_param: proxy_ip }

  telegraf_agent_init:
    type: OS::Heat::MultipartMime
    properties:
      parts:
        [ {
            filename: "heat-powershell-utils.psm1",
            subtype: "x-cfninitdata",
            config: { get_resource: utils_module }
          },
          {
            filename: "telegrafagent.psm1",
            subtype: "x-cfninitdata",
            config: { get_resource: telegraf_agent_module }
          },
          {
            filename: "cfn-userdata",
            subtype: "x-cfninitdata",
            config: { get_resource: telegraf_agent_main }
          }
        ]


  server:
    type: OS::Nova::Server
    depends_on: [ server_port, telegraf_agent_init ]
    properties:
      name: { get_param: serverName }
      image: { get_param: bootImage }
      availability_zone: { get_param: vmAvailabilityZone }
      key_name: { get_param: key }
      flavor: { get_param: flavor}
      networks:
        - port: { get_resource: server_port }
      user_data_format: RAW
      user_data: { get_resource: telegraf_agent_init }

outputs:
  network:
    description: ip address of vm
    value: { get_attr: [ server, networks ] }
